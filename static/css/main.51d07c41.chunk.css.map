{"version":3,"sources":["webpack://src/scss/abstract/_functions.scss","webpack://src/scss/abstract/_variables.scss","webpack://src/scss/abstract/_mixins.scss","webpack://src/scss/shared/_global.scss"],"names":[],"mappings":"AAiDI,qBAEI,wBCkDe,CDjDf,oBCiDe,CDhDf,gBCgDe,CDpDnB,oBAEI,uBCkDoB,CDjDpB,mBCiDoB,CDhDpB,eCgDoB,CDpDxB,qBAEI,wBCkD0B,CDjD1B,oBCiD0B,CDhD1B,gBCgD0B,CD/C7B,WElBO,iBAAkB,CAClB,0BDf6B,CCgB7B,iBAAkD,CAClD,eAAoD,CACpD,0DAJA,CAAA,WAAA,iBACA,CAAA,4BACA,CAAA,iBACA,CAAA,eACA,CAAA,4DAHA,CAAA,WAAA,iBACA,CAAA,6BACA,CAAA,iBACA,CAAA,eAAA,CAAA,6DAHA,CAAA,WACA,iBACA,CAAA,yBACA,CAAA,iBAAA,CAAA,eCxCZ,CAAA,yDAOI,CAAA,gBACA,WAAA,CAAA,KAAA,kCAEA,CAAA,iCACA,CAAA,wBAAA,CAAA,aACA,CAAA,wDAMA,CAAA,cAAA,CAAA,eAAA,CAAA,QACA,CAAA,MAAA,+DAEA,CAAA,uBAEA,CAAA,2BAAY,CAAA,uBAAA,CAAA,WAAA,CAAA,WAAA","file":"main.51d07c41.chunk.css","sourcesContent":["/// helper-classes function for parsing correct value to the content property\n/// @name tp-content\n/// @group tp-functions\n/// @author Stevan Stojanovic\n@function tp-content($tp-var) {\n    // sass-lint:disable quotes\n    @return unquote(\"\\\"#{$tp-var}\\\"\");\n}\n\n/// @name ui-suffix\n/// @author Stevan Stojanovic\n/// @group tp-functions\n/// @param {string} $ui quoted or unquoted\n/// returns nothing if ui is set to null, and -#{$ui} if not\n\n@function ui-suffix($ui) {\n    @return if($ui == null, '', '-' + $ui);\n}\n\n/// @name is-number\n/// @author Stevan Stojanovic\n/// @group tp-functions\n/// @param {string,string} $value quoted or unquoted\n/// returns true if the $value is type of number\n@function is-number($value) {\n    @return type-of($value) == 'number';\n}\n\n/// map deep get\n/// @author Stevan Stojanovic\n/// @group tp-functions\n/// @access public\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Key chain\n/// @return {*} - Desired value\n@function map-deep-get($map, $keys...) {\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n    @return $map;\n}\n\n/// user-select classes\n/// @author Stevan Stojanovic\n/// @group tp-functions\n/// @access public\n/// @require {variable} $user-select-list\n/// @return {CSS classes} Classes based on the list provided\n@each $user-select in $user-select-list {\n    .#{$prefix}user-select-#{$user-select} {\n        -moz-user-select: $user-select;\n        -webkit-user-select: $user-select;\n        -ms-user-select: $user-select;\n        user-select: $user-select;\n    }\n}\n\n/// transition\n/// @author Stevan Stojanovic\n/// @group tp-functions\n/// @access public\n/// @require {variable} $transition-duration\n/// @require {variable} $transition-animation\n/// @return {CSS property} css transition property if you want to use multiple transition just call this fn as many\n/// times as you need with comma separation\n/// @example\n///    .test { transition: transition(background-color), transition(color, 400ms, linear, 200ms); }\n///\n///     will result in:\n///\n///       .test { transition: background-color 200ms ease-in-out, color 400ms linear 200ms}\n@function transition(\n    $css-property,\n    $transition-duration: $transition-duration,\n    $transition-animation: $transition-animation,\n    $transition-delay: null) {\n\n    @return $css-property $transition-duration $transition-animation $transition-delay;\n}\n","//--------------------------------------------------------------------------------------------------------------------//\n//                                      THEME GLOBAL VARIABLES                                                        //\n//--------------------------------------------------------------------------------------------------------------------//\n/// App Global prefix\n/// @group app-config\n$prefix: 'ss-' !default;\n/// App font path\n/// @group app-config\n$fonts-path:            '../../resources/fonts/' !default;\n/// App imgs path\n/// @group app-config\n$imgs-path:             '../../resources/imgs/' !default;\n/// App icon path\n/// @group app-config\n$icon-path:             '../../resources/icons/' !default;\n//--------------------------------------------------------------------------------------------------------------------//\n//sass-lint:disable space-before-colon\n/// App map of fonts\n/// @group tp-fonts\n$fonts-map: ((\n        'oswald-light': (\n                'display': 'fallback',\n                'name'   : 'oswald-light',\n                'style'  : 'normal',\n                'weight' : 'normal',\n                'formats': 'ttf'\n        ),\n        'oswald-regular': (\n                'display': 'fallback',\n                'name'   : 'oswald-regular',\n                'style'  : 'normal',\n                'weight' : 'normal',\n                'formats': 'ttf'\n        ),\n        'oswald-semibold': (\n                'display': 'fallback',\n                'name'   : 'oswald-semibold',\n                'style'  : 'normal',\n                'weight' : 'normal',\n                'formats': 'ttf'\n        ),\n        'oswald-bold': (\n                'display': 'fallback',\n                'name'   : 'oswald-bold',\n                'style'  : 'normal',\n                'weight' : 'normal',\n                'formats': 'ttf'\n        )\n));\n//--------------------------------------------------------------------------------------------------------------------//\n/// App font reference map\n/// @group tp-fonts\n$fonts-reference-map: (\n        'oswald-light':    ('oswald-light',    'Helvetica Neue', sans-serif),\n        'oswald-regular':  ('oswald-regular',  'Helvetica Neue', sans-serif),\n        'oswald-semibold': ('oswald-semibold', 'Helvetica Neue', sans-serif),\n        'oswald-bold':     ('oswald-bold',     'Helvetica Neue', sans-serif)\n) !default;\n//--------------------------------------------------------------------------------------------------------------------//\n/// App font family light\n/// @group tp-fonts\n$font-family-light:           \tmap-get($fonts-reference-map, 'oswald-light') !default;\n/// App font family\n/// @group tp-fonts\n$font-family:           \t\tmap-get($fonts-reference-map, 'oswald-regular') !default;\n/// App font family semibold\n/// @group tp-fonts\n$font-family-semibold:  \t\tmap-get($fonts-reference-map, 'oswald-semibold') !default;\n/// App font family bold\n/// @group tp-fonts\n$font-family-bold:      \t\tmap-get($fonts-reference-map, 'oswald-bold') !default;\n//--------------------------------------------------------------------------------------------------------------------//\n/// App font size xs\n/// @group tp-fonts\n$font-size-xs:          10px !default;\n/// App font size sm\n/// @group tp-fonts\n$font-size-sm:          12px !default;\n/// App font size\n/// @group tp-fonts\n$font-size:             14px !default;\n/// App font size m\n/// @group tp-fonts\n$font-size-m:           16px !default;\n/// App font size l\n/// @group tp-fonts\n$font-size-l:           18px !default;\n/// App font size xl\n/// @group tp-fonts\n$font-size-lg:          20px !default;\n//--------------------------------------------------------------------------------------------------------------------//\n/// App transition duration\n/// @group app-config\n$transition-duration: 250ms !default;\n/// App transition type\n/// @group app-config\n$transition-animation: ease-in-out !default;\n/// App transition\n/// @group app-config\n$transition: transition(color), transition(background-color), transition(border-color), transition(box-shadow) !default;\n//--------------------------------------------------------------------------------------------------------------------//\n$user-select-list: none, all, text !default;\n//--------------------------------------------------------------------------------------------------------------------//\n$body-bg: #eaeaea !default;\n$body-color: #4a4a4a !default;\n","/// @name add single fonts\n/// @author Stevan Stojanovic\n/// @group tp-fonts\n/// @require {variable} $fonts-path\n/// @require {map} $fonts-map\n/// @param {variable} $font ['open-sans-regular'] represents the param which is intended to be picked from the $fonts-map\n/// @param {map}  $fonts [null] is the param that is meant to be changed ONLY when using this mixin inside add-all-fonts\n/// @param {boolean} $for-all-fonts-reference [false] this serves as a switch when using this mixin inside add-all-fonts\n/// @example\n/// THIS IS THE DEFAULT\n///   @include add-single-font;\n///         outputs:\n///             @font-face {\n///                  font-display: swap;\n///                  font-family: \"open-sans-regular\";\n///                  font-style: normal;\n///                  font-weight: normal;\n///                  src: url(\"../resources/fonts/open-sans-semibold.ttf\");\n///              }\n/// THIS IS RANDOM BUT NESTED INSIDE VALID FONT-CONFIG-MAP\n///   @include add-single-fonts('open-sans-semibold');\n///         outputs:\n///             @font-face {\n///                  font-display: swap;\n///                  font-family: \"open-sans-semibold\";\n///                  font-style: normal;\n///                  font-weight: normal;\n///                  src: url(\"../resources/fonts/open-sans-semibold.ttf\");\n///              }\n@mixin add-single-font(\n    $font: 'open-sans-regular',\n    $fonts: null,\n    $for-all-fonts-reference: false\n) {\n    @if ($fonts != null and $for-all-fonts-reference) {\n        @font-face {\n            font-display: swap;\n            font-family: map-deep-get($fonts, 'name');\n            font-style: unquote(map-deep-get($fonts, 'style'));\n            font-weight: unquote(map-deep-get($fonts, 'weight'));\n            src: url('#{$fonts-path}' + map-deep-get($fonts, 'name') + '.' + map-deep-get($fonts, 'formats'));\n        }\n    } @else if ($for-all-fonts-reference: false) {\n        $single-font-reference: map-get($fonts-map, $font);\n\n        @font-face {\n            font-display: swap;\n            font-family: map-get($single-font-reference, 'name');\n            font-style: unquote(map-get($single-font-reference, 'style'));\n            font-weight: unquote(map-get($single-font-reference, 'weight'));\n            src: url('#{$fonts-path}' + map-get($single-font-reference, 'name') + '.' + map-get($single-font-reference, 'formats'));\n        }\n    } @else  {\n        @warn 'Please provide the map and the desired submap!'\n    }\n}\n\n/// @name add all fonts\n/// @author Stevan Stojanovic\n/// @group tp-fonts\n/// @require {variable} $fonts-path\n/// @require {map}      $map\n/// @param   {map}      $map which holds the config for multiple font groups\n@mixin add-all-fonts($map: $fonts-map) {\n    @if ($map != null) {\n        $font-groups: map-keys($map);\n\n        @for $i from 1 through length($font-groups) {\n            $single-font-group-name: nth($font-groups, $i);\n            @include add-single-font($fonts: map-get($map, $single-font-group-name), $for-all-fonts-reference: true);\n        }\n    } @else {\n        @error 'You need to provide map of fonts which you want to include into app!'\n    }\n}\n","html,\n#root,\nbody {\n    height: 100%;\n}\n\nbody {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: $body-bg;\n    color: $body-color;\n    font-family: $font-family;\n    font-size: $font-size;\n    line-height: 1.5;\n    margin: 0;\n}\n\n.logo {\n    background-image: url('#{$imgs-path}logo.svg');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    height: 48px;\n    width: 250px;\n}\n"]}